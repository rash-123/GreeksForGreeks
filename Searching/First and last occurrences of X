class Solution {
  public:
    vector<int> firstAndLast(vector<int> &arr, int n, int x) {
        // Code here
    vector<int> occ;
    int l = 0, r = n-1, firstOcc = -1, lastOcc = -1;
    int ans = -1;
    while(l<=r){
        int mid = (l+r)/2;
        if(arr[mid] == x){
            if(mid - 1 >= l && arr[mid - 1] == x){
                r = mid - 1;
            }
            else{
                firstOcc = mid;
                break;
            }
        }
        else if(arr[mid] < x){
            l = mid + 1;
        }
        else {
            r = mid - 1;
        }
    }
    l = 0, r = n-1;
     while(l<=r){
        int mid = (l+r)/2;
        if(arr[mid] == x){
            if(mid + 1 <= r && arr[mid + 1] == x){
                l = mid + 1;
            }
            else{
                lastOcc = mid;
                break;
            }
        }
        else if(arr[mid] < x){
            l = mid + 1;
        }
        else {
            r = mid - 1;
        }
    }
    if(firstOcc != -1 && lastOcc != -1){
        occ.push_back(firstOcc);
        occ.push_back(lastOcc);
        return occ;
    }
    else{
        occ.push_back(ans);
     }
     return occ;
    }
};